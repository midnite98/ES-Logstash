input {}
#   file {
#     path => "/home/buntu/poc/temp.json"
#     path => "/home/ubuntu/unparsed-2022.04.25.json"
#     sincedb_path => "/dev/null"
# }
    beats {
    port => 5044
    add_field => { "[@metadata][CTI]" => '' }
 }
}

filter {
#     mutate {
#       gsub => ["message", "[\\]", "{{DELIMITER_KEY}}"]
#    }
     json {
        source => "message"
     }
     mutate {
        remove_field => [ "host", "@version", "path", "_id", "_index", "_score", "_type" ]
        remove_tag => [ "beats_input_codec_plain_applied" ]
        rename => { "[Geolocation][Lat]" => "[Geolocation][lat]" }
        rename => { "[Geolocation][Lon]" => "[Geolocation][lon]" }
        add_field => { "[@metadata][csv_path]" => "/home/ubuntu/{{PRODUCT}}-EV-%{+YYYY.MM.dd}.csv" }
    }
    ruby {
        code => "
            begin
                @@csv_file    = event.get('[@metadata][csv_path]')
                @@csv_headers = [ 'Timestamp', 'Event', 'Indicator', 'Source', 'Domain', 'Isp', 'Country', 'State', 'City', 'Latitude', 'Longitude', 'Status', 'Score', 'Details', 'Port', 'Group', 'Transport', 'Direction', 'Type', 'Severity', 'Sighting', 'Category', 'History', 'Trend', 'Adversary', 'Related', 'Reference', 'Matrix', 'Tlp', 'Username', 'Password', 'Command', 'Md5', 'Sha1', 'Sha512', 'Gdpr', 'Hipaa', 'Tsc', 'Pci_Dss', 'Nist_800_53', 'Gpg13', 'TechniqueName', 'TechniqueId', 'TechniqueWiki', 'TechniqueDescription', 'TechniqueDetection', 'TechniquePlatforms', 'TechniqueSources', 'TechniqueCommand', 'TechniqueReference', 'TacticName', 'TacticId', 'TacticWiki', 'TacticDescription', 'MitigationName', 'MitigationId', 'MitigationWiki', 'MitigationDescription' ]
                if File.zero?(@@csv_file) || !File.exist?(@@csv_file)
                    CSV.open(@@csv_file, 'w') do |csv|
                        csv << @@csv_headers
                    end
                end
            end
        "
    }
    if ![Attack-Pattern] {
     mutate {
        add_field => { "Attack-Pattern" => "Null" }
     }
    }
    if ![Trend-Pattern] {
     mutate {
        add_field => { "Trend-Pattern" => "Null" }
     }
    }
    if ![Galaxy-Matrix] {
     mutate {
        add_field => { "Galaxy-Matrix" => "Null" }
     }
    }
    if ![Reference][0] {
     mutate {
        replace => { "[Reference]" => "Null" }
     }
    }
    if ![Related][0] {
     mutate {
        remove_field => [ "[Related]" ]
     }
     mutate {
        add_field => { "Related" => "Null" }
     }
    }
    if [City] == 'None' {
     mutate {
        replace => { "City" => "Null" }
     }
    }
    if [State] == 'None' {
     mutate {
        replace => { "State" => "Null" }
     }
    }

    if ![Additional][Username] {
     mutate {
        add_field => {"[Additional][Username]" => "Null" }
     }
    }
    if [Username] {
     mutate {
        rename => { "Username" => "[Additional][Username]" }
     }
    }

    if ![Additional][Password] {
     mutate {
        add_field => {"[Additional][Password]" => "Null" }
     }
    }
    if [Password] {
     mutate {
        rename => { "Password" => "[Additional][Password]" }
     }
    }

    if ![Command] {
     mutate {
        add_field => {"[Additional][Command]" => "Null" }
     }
    }
    if [Command] {
     mutate {
        rename => { "Command" => "[Additional][Command]" }
     }
    }

    if ![Additional][Md5] {
     mutate {
        add_field => {"[Additional][Md5]" => "Null" }
     }
    }
    if [Md5] {
     mutate {
        rename => { "Md5" => "[Additional][Md5]" }
     }
    }

    if ![Additional][Sha1] {
     mutate {
        add_field => {"[Additional][Sha1]" => "Null" }
     }
    }
    if [Sha1] {
     mutate {
        rename => { "Sha1" => "[Additional][Sha1]" }
     }
    }

    if ![Additional][Sha512] {
     mutate {
        add_field => {"[Additional][Sha512]" => "Null" }
     }
    }
    if [Sha512] {
     mutate {
        rename => { "Sha512" => "[Additional][Sha512]" }
     }
    }
##############################################################
     #json {
     #   source => "message"
     #}
     mutate {
       add_field => { "file_path" => '{\""Id"\":\""%{[Id]}"\",\""Timestamp"\":\""%{[Timestamp]}"\",\""Event"\":\""%{[Event]}"\",\""Indicator"\":\""%{[Indicator]}"\",\""Source"\":\""%{[Source]}"\",\""Domain"\":\""%{[Domain]}"\",\""Isp"\":\""%{[Isp]}"\",\""Country"\":\""%{[Country]}"\",\""State"\":\""%{[State]}"\",\""City"\":\""%{[City]}"\",\""Latitude"\":\""%{[Geolocation][lat]}"\",\""Longitude"\":\""%{[Geolocation][lon]}"\",\""Status"\":\""%{[Status]}"\",\""Score"\":\""%{[Score]}"\",\""Details"\":\""%{[Details]}"\",\""Metadata"\":{\""Commit"\":\""%{[Metadata][Commit]}"\",\""Offense"\":\""%{[Metadata][Offense]}"\",\""Port"\":\""%{[Metadata][Port]}"\"},\""Group"\":\""%{[Group]}"\",\""Transport"\":\""%{[Transport]}"\",\""Direction"\":\""%{[Direction]}"\",\""Type"\":\""%{[Type]}"\",\""Severity"\":\""%{[Severity]}"\",\""Sighting"\":\""%{[Sighting]}"\",\""Category"\":\""%{[Category]}"\",\""History"\":\""%{[History]}"\",\""Trend-Pattern"\":\""%{[Trend-Pattern]}"\",\""Attack-Pattern"\":\""%{Attack-Pattern}"\",\""Related"\":\""%{[Related]}"\",\""Reference"\":\""%{[Reference]}"\",\""Galaxy-Matrix"\":\""%{[Galaxy-Matrix]}"\",\""Tlp"\":\""%{[Tlp]}"\",\""Offense"\":\""%{[Metadata][Offense]}"\",\""Commit"\":\""%{[Metadata][Commit]}"\",\""Additional"\":{\""Username"\":\""%{[Additional][Username]}"\",\""Password"\":\""%{[Additional][Password]}"\",\""Command"\":\""%{[Additional][Command]}"\",\""Md5"\":\""%{[Additional][Md5]}"\",\""Sha1"\":\""%{[Additional][Sha1]}"\",\""Sha512"\":\""%{[Additional][Sha512]}"\"},\""Compliance"\":{\""Gdpr"\":\""%{[Compliance][Gdpr]}"\",\""Hipaa"\":\""%{[Compliance][Hipaa]}"\",\""Tsc"\":\""%{[Compliance][Tsc]}"\",\""Pci_Dss"\":\""%{[Compliance][Pci_Dss]}"\",\""Nist_800_53"\":\""%{[Compliance][Nist_800_53]}"\",\""Gpg13"\":\""%{[Compliance][Gpg13]}"\"},\""Mitre"\":\""%{[Mitre]}"\"}' }
       #add_field => { "file_path" => '{\""Id"\":\""%{[Id]}"\",\""Timestamp"\":\""%{[Timestamp]}"\",\""Event"\":\""%{[Event]}"\",\""Indicator"\":\""%{[Indicator]}"\",\""Source"\":\""%{[Source]}"\",\""Domain"\":\""%{[Domain]}"\",\""Isp"\":\""%{[Isp]}"\",\""Country"\":\""%{[Country]}"\",\""State"\":\""%{[State]}"\",\""City"\":\""%{[City]}"\",\""Latitude"\":\""%{[Geolocation][lat]}"\",\""Longitude"\":\""%{[Geolocation][lon]}"\",\""Status"\":\""%{[Status]}"\",\""Score"\":\""%{[Score]}"\",\""Details"\":\""%{[Details]}"\",\""Metadata"\":{\""Commit"\":\""%{[Metadata][Commit]}"\",\""Offense"\":\""%{[Metadata][Offense]}"\",\""Port"\":\""%{[Metadata][Port]}"\"},\""Group"\":\""%{[Group]}"\",\""Transport"\":\""%{[Transport]}"\",\""Direction"\":\""%{[Direction]}"\",\""Type"\":\""%{[Type]}"\",\""Severity"\":\""%{[Severity]}"\",\""Sighting"\":\""%{[Sighting]}"\",\""Category"\":\""%{[Category]}"\",\""History"\":\""%{[History]}"\",\""Trend-Pattern"\":\""%{[Trend-Pattern]}"\",\""Attack-Pattern"\":\""%{Attack-Pattern}"\",\""Related"\":\""%{[Related]}"\",\""Reference"\":\""%{[Reference]}"\",\""Galaxy-Matrix"\":\""%{[Galaxy-Matrix]}"\",\""Tlp"\":\""%{[Tlp]}"\",\""Offense"\":\""%{[Metadata][Offense]}"\",\""Commit"\":\""%{[Metadata][Commit]}"\",\""Additional"\":{\""Username"\":\""%{[Additional][Username]}"\",\""Password"\":\""%{[Additional][Password]}"\",\""Command"\":\""%{[Additional][Command]}"\",\""Md5"\":\""%{[Additional][Md5]}"\",\""Sha1"\":\""%{[Additional][Sha1]}"\",\""Sha512"\":\""%{[Additional][Sha512]}"\"},\""Mitre"\":\""%{[Mitre]}"\"}' }
       #add_field => { "file_path" => '{\""Id"\":\""%{[Id]}"\"}'
       add_field => { "timedate" => "%{+YYYY.MM.dd}" }
     }
     ruby {
        code => 'require "open3"
                 file_path = event.get("file_path")
                 timedate = event.get("timedate")
                 cmd =  "/etc/logstash/conf.d/ingest.py #{file_path} #{timedate}"
                 stdin, stdout, stderr = Open3.popen3(cmd)
                 event.set("process_result", stdout.read)
                 err = stderr.read
                 if err.to_s.empty?
                   filter_matched(event)
                 else
                   event.set("ext_script_err_msg", err)
                 end'
         remove_field => ["file_path", "timedate"]
       }
     json {
        source => "process_result"
     }
     mutate {
        remove_field => ["process_result", "message"]
     }
     fingerprint {
                   source => "Indicator"
                   target => "[@metadata][z-identifier]"
                   method => "SHA256"
                   key => "Threat_Intelligence"
                   base64encode => true
                }
     if [Information] == 'Null' {
     mutate {
        remove_field => [ "Information" ]
     }
    }
}
output {
if [ext_script_err_msg] {
 file {
       path => "/home/ubuntu/unparsed-%{+YYYY.MM.dd}.json"
 }
}
if "_jsonparsefailure" in [tags] {
  file {
       path => "/home/ubuntu/troubleshoot-%{+YYYY.MM.dd}.json"
 }
}
if "[@metadata][{{PRODUCT}}-TP]" in [tags] {
  csv {
       fields => [ "[message]" ]
       path => "/home/ubuntu/{{PRODUCT}}-TP-%{+YYYY.MM.dd}.csv"
    }
}
if "[@metadata][{{PRODUCT}}-FP]" in [tags] {
  csv {
       fields => [ "[message]" ]
       path => "/home/ubuntu/{{PRODUCT}}-FP-%{+YYYY.MM.dd}.csv"
    }
}
if "[@metadata][CTI]" {
  elasticsearch {
#       hosts => ["https://{{ELASTIC_COORDINATOR}}:9200", "https://{{ELASTIC_COORDINATOR2}}:9200"]
       hosts => ["https://{{ELASTIC_COORDINATOR}}:9200"]
       index => "{{PRODUCT}}-%{+YYYY.MM.dd}"
       action => "update"
       doc_as_upsert => true
       document_id => "%{[@metadata][z-identifier]}"
       manage_template => false
##      script => "if (ctx._source['counter'] == null) { ctx._source['counter'] = 1 } else { ctx._source.counter++ }"
##       codec => line {
##         format => '{"Commit":"%{[@timestamp]}","Timestamp":"%{[Timestamp]}","Event":"%{[Event]}","Indicator":"%{[Indicator]}","Source":"%{[Source]}","Domain":"%{[Domain]}","Country":"%{[Country]}","Status":"%{[Status]}","Score":"%{[Score]}","Details":"%{[Details]}","Isp":"%{[Isp]}","Group":"%{[Group]}","Transport":"%{[Transport]}","Direction":"%{[Direction]}","Type":"%{[Type]}","Severity":"%{[Severity]}","Sighting":"%{[Sighting]}","History":"%{[History]}","Trend-Pattern":"%{[Trend-Pattern]}","Attack-Pattern":"%{[Attack-Pattern]}","Galaxy-Matrix":"%{[Galaxy-Matrix]}","Related":"%{[Related]}","Reference":"%{[Reference]}","Tlp":"%{[Tlp]}"}'
##       }
       cacert => "/etc/logstash/certs/client-ca.cer"
       user => "elastic"
       password => "{{ELASTIC_PASS}}"
       template_name => "finalized-%{+YYYY.MM.dd}"
  }
  syslog {
       sourcehost => "{{HOSTNAME}}"
       appname => "{{PRODUCT}}"
       host => "{{HOST_IP}}"
       port => 514
       protocol => "udp"
       codec => json
#       codec => line {
#             format => '{"Commit":"%{[@timestamp]}","Timestamp":"%{[Timestamp]}","Event":"%{[Event]}","Indicator":"%{[Indicator]}","Source":"%{[Source]}","Domain":"%{[Domain]}","Country":"%{[Country]}","Status":"%{[Status]}","Score":"%{[Score]}","Details":"%{[Details]}","Isp":"%{[Isp]}","Group":"%{[Group]}","Transport":"%{[Transport]}","Direction":"%{[Direction]}","Type":"%{[Type]}","Severity":"%{[Severity]}","Sighting":"%{[Sighting]}","History":"%{[History]}","Trend-Pattern":"%{[Trend-Pattern]}","Attack-Pattern":"%{[Attack-Pattern]}","Galaxy-Matrix":"%{[Galaxy-Matrix]}","Related":"%{[Related]}","Reference":"%{[Reference]}","Tlp":"%{[Tlp]}"}'
#           }
  }
#  if [Mitre] {
#    exec {
#        command => "> /tmp/temp.json"
#     }
#    file {
#        path => "/tmp/temp.json"
#        codec => line {
#            format => '{"Timestamp":"%{[Timestamp]}","Event":"%{[Event]}","Indicator":"%{[Indicator]}","Source":"%{[Source]}","Domain":"%{[Domain]}","Isp":"%{[Isp]}","Country":"%{[Country]}","State":"%{[State]}","City":"%{[City]}","Latitude":"%{[Geolocation][lat]}","Longitude":"%{[Geolocation][lon]}","Status":"%{[Status]}","Score":"%{[Score]}","Details":"%{[Details]}","Metadata":%{[Metadata]},"Group":"%{[Group]}","Transport":"%{[Transport]}","Direction":"%{[Direction]}","Type":"%{[Type]}","Severity":"%{[Severity]}","Sighting":"%{[Sighting]}","Category":"%{[Category]}","History":"%{[History]}","Trend-Pattern":"%{[Trend-Pattern]}","Attack-Pattern":"%{Attack-Pattern}","Related":"%{[Related]}","Reference":"%{[Reference]}","Galaxy-Matrix":"%{[Galaxy-Matrix]}","Tlp":"%{[Tlp]}","Additional":%{[Additional]},"Mitre":%{[Mitre]}}'
#    }}
#    exec {
#        command => "python3 ingest.py %{+YYYY.MM.dd}"
#     }
#   }
# stdout { codec => rubydebug }
 }
}
